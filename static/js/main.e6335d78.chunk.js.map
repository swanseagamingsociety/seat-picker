{"version":3,"sources":["app_config.js","util/parseUrl.js","util/popupUtils.js","contexts/AuthenticationContext.jsx","Authenticator.jsx","components/EventList.jsx","components/LayoutList.jsx","contexts/UserContext.jsx","signals/refreshLayout.js","components/LayoutView.jsx","services/SeatService.js","components/SeatView.jsx","App.js","ApplicationProviders.js","registerServiceWorker.js","index.js"],"names":["API_URL","getSearchQs","location","qs","search","replace","querystring","parse","getAnchorQs","anchorQs","arr","anchor","split","length","getAnchorSearch","getAllParams","extend","openAuthenticationPopup","window","open","listenForAuthentication","popup","resolve","reject","console","log","Promise","res","rej","creds","err","jwt","close","closed","setTimeout","AuthenticationContext","createContext","AuthenticationProvider","props","localToken","localStorage","getItem","undefined","useState","setJwt","user","setUser","a","loginPopup","setItem","removeItem","useEffect","userRequest","Request","headers","fetch","userFetch","json","Provider","value","login","logout","useAuthentication","useContext","Authenticator","authentication","className","src","profile_url","alt","tag","onClick","EventList","events","setEvents","eventsFetch","eventElements","map","e","to","event_id","name","LayoutList","eventId","useParams","layouts","setLayouts","eventFetch","event","layoutElements","l","layout_id","UserContext","UserProvider","useUser","MiniSignal","LayoutView","layoutId","history","useHistory","seats","setSeats","selectedSeat","setSelectedSeat","useResizeDetector","width","height","ref","refreshLayout","useCallback","eventSeatsRequest","eventSeats","signalBinding","refreshLayoutSignal","add","detach","xMin","d3min","x","x_pos","xMax","d3max","yMin","y_pos","yMax","xScale","scaleLinear","domain","range","SEAT_RADIUS","yScale","seatCircles","s","cx","cy","r","fill","user_id","seat_id","seatId","push","SeatService","this","seatRequest","seat","_checkAuthentication","method","seatReservationRequest","seatReservation","status","alert","seatReleaseRequest","ok","Error","SeatView","detailComponent","setSeat","refreshSeat","seatService","getSeat","MySeat","ReservedSeat","ReservableSeat","canReserve","reserveSeat","dispatch","disabled","releaseSeat","App","path","component","ApplicationProviders","children","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6335d78.chunk.js","sourcesContent":["export const API_URL = 'https://sgs-seatpicker.herokuapp.com';\n","import querystring from \"querystring\";\r\nimport extend from \"extend\";\r\n\r\nexport function normalizeTokenKeys (params) {\r\n  // normalize keys\r\n  if (params.token) {\r\n    params[\"access-token\"] = params.token;\r\n    delete params.token;\r\n  }\r\n  if (params.auth_token) {\r\n    params[\"access-token\"] = params.auth_token;\r\n    delete params.auth_token;\r\n  }\r\n  if (params.client_id) {\r\n    params.client = params.client_id;\r\n    delete params.client_id;\r\n  }\r\n  if (params.config) {\r\n    params.endpointKey = params.config;\r\n    delete params.config;\r\n  }\r\n\r\n  return params;\r\n};\r\n\r\n\r\nconst getAnchorSearch = function(location) {\r\n  var rawAnchor = location.anchor || \"\",\r\n    arr       = rawAnchor.split(\"?\");\r\n  return (arr.length > 1) ? arr[1] : null;\r\n};\r\n\r\n\r\nconst getSearchQs = function(location) {\r\n  var rawQs = location.search || \"\",\r\n    qs    = rawQs.replace(\"?\", \"\"),\r\n    qsObj = (qs) ? querystring.parse(qs) : {};\r\n\r\n  return qsObj;\r\n};\r\n\r\n\r\nconst getAnchorQs = function(location) {\r\n  var anchorQs    = getAnchorSearch(location),\r\n    anchorQsObj = (anchorQs) ? querystring.parse(anchorQs) : {};\r\n\r\n  return anchorQsObj;\r\n};\r\n\r\nconst stripKeys = function(obj, keys) {\r\n  for (var q in keys) {\r\n    delete obj[keys[q]];\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\nexport function getAllParams (location) {\r\n  return extend({}, getAnchorQs(location), getSearchQs(location));\r\n};\r\n\r\n\r\nconst buildCredentials = function(location, keys) {\r\n  var params = getAllParams(location);\r\n  var authHeaders = {};\r\n\r\n  for (var key of keys) {\r\n    authHeaders[key] = params[key];\r\n  }\r\n\r\n  return normalizeTokenKeys(authHeaders);\r\n};\r\n\r\n\r\n// this method is tricky. we want to reconstruct the current URL with the\r\n// following conditions:\r\n// 1. search contains none of the supplied keys\r\n// 2. anchor search (i.e. `#/?key=val`) contains none of the supplied keys\r\n// 3. all of the keys NOT supplied are presevered in their original form\r\n// 4. url protocol, host, and path are preserved\r\nconst getLocationWithoutParams = function(currentLocation, keys) {\r\n  // strip all values from both actual and anchor search params\r\n  var newSearch   = querystring.stringify(stripKeys(getSearchQs(currentLocation), keys)),\r\n    newAnchorQs = querystring.stringify(stripKeys(getAnchorQs(currentLocation), keys)),\r\n    newAnchor   = (currentLocation.hash || \"\").split(\"?\")[0];\r\n\r\n  if (newSearch) {\r\n    newSearch = \"?\" + newSearch;\r\n  }\r\n\r\n  if (newAnchorQs) {\r\n    newAnchor += \"?\" + newAnchorQs;\r\n  }\r\n\r\n  if (newAnchor && !newAnchor.match(/^#/)) {\r\n    newAnchor = \"#/\" + newAnchor;\r\n  }\r\n\r\n  // reconstruct location with stripped auth keys\r\n  var newLocation = currentLocation.pathname + newSearch + newAnchor;\r\n\r\n  return newLocation;\r\n};\r\n\r\n\r\nexport default function getRedirectInfo(currentLocation) {\r\n  if (!currentLocation) {\r\n    return {};\r\n  } else {\r\n    let authKeys = [\r\n      \"access-token\",\r\n      \"token\",\r\n      \"auth_token\",\r\n      \"config\",\r\n      \"client\",\r\n      \"client_id\",\r\n      \"expiry\",\r\n      \"uid\",\r\n      \"reset_password\",\r\n      \"account_confirmation_success\"\r\n    ];\r\n\r\n    var authRedirectHeaders = buildCredentials(currentLocation, authKeys);\r\n    var authRedirectPath = getLocationWithoutParams(currentLocation, authKeys);\r\n\r\n    if (authRedirectPath !== currentLocation) {\r\n      return {authRedirectHeaders, authRedirectPath};\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n","import { API_URL } from '../app_config';\r\nimport { getAllParams } from './parseUrl';\r\n\r\nfunction openAuthenticationPopup() {\r\n  return window.open(`${API_URL}/api/auth/login`, 'Osiris2 Authentication', 'scrollbars=no,toolbar=no,location=no,titlebar=no,directories=no,status=no,menubar=no');\r\n}\r\n\r\nfunction listenForAuthentication(popup, resolve, reject) {\r\n  if(!resolve) {\r\n    console.log('Setting up authentication');\r\n    return new Promise((res, rej) => {\r\n      listenForAuthentication(popup, res, rej);\r\n    });\r\n  } else {\r\n    let creds;\r\n    try {\r\n      creds = getAllParams(popup.location);\r\n    } catch (err) { }\r\n    if(creds && creds.jwt) {\r\n      console.log('We did it reddit!');\r\n      popup.close();\r\n      resolve(creds.jwt);\r\n    } else if (popup.closed) {\r\n      reject({ err: 'Authentication cancelled.' });\r\n    } else {\r\n      setTimeout(() => {\r\n        listenForAuthentication(popup, resolve, reject);\r\n      }, 0);\r\n    }\r\n  }\r\n}\r\n\r\nexport { openAuthenticationPopup, listenForAuthentication }\r\n","import { createContext, useContext } from \"react\";\r\nimport { useEffect, useState } from \"react/cjs/react.development\";\r\nimport { API_URL } from \"../app_config\";\r\n\r\nimport { openAuthenticationPopup, listenForAuthentication } from \"../util/popupUtils\";\r\n\r\nconst AuthenticationContext = createContext();\r\n\r\nfunction AuthenticationProvider(props) {\r\n    const localToken = window.localStorage.getItem('jwt') || undefined;\r\n    const [jwt, setJwt] = useState(localToken);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if(jwt) {\r\n                try {\r\n                    const userRequest = new Request(`${API_URL}/api/users/@me`, {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${jwt}`,\r\n                        },\r\n                    });\r\n                    const userFetch = await fetch(userRequest);\r\n                    const user = await userFetch.json();\r\n                    setUser(user);\r\n                } catch (e) {\r\n                    setUser(null);\r\n                    setJwt(null);\r\n                }\r\n            } else {\r\n                setUser(null);\r\n            }\r\n        })();\r\n    }, [jwt]);\r\n\r\n    async function login() {\r\n        const loginPopup = openAuthenticationPopup();\r\n        const jwt = await listenForAuthentication(loginPopup);\r\n        window.localStorage.setItem('jwt', jwt);\r\n        setJwt(jwt);\r\n    }\r\n\r\n    async function logout() {\r\n        window.localStorage.removeItem('jwt');\r\n        setJwt(null);\r\n    }\r\n\r\n    return (\r\n        <AuthenticationContext.Provider value={{\r\n            jwt,\r\n            user,\r\n            login,\r\n            logout,\r\n        }} {...props} />\r\n    )\r\n};\r\n\r\nconst useAuthentication = () => useContext(AuthenticationContext);\r\n\r\nexport { AuthenticationProvider, useAuthentication };","import React from 'react';\r\n\r\nimport { useAuthentication } from './contexts/AuthenticationContext';\r\n\r\nexport default function Authenticator() {\r\n    const authentication = useAuthentication();\r\n    if(authentication.user) {\r\n        const { user } = authentication;\r\n        return (\r\n            <div className='osirisAuthentication'>\r\n                <img src={user.profile_url} alt={user.tag} className='osirisLoggedInUserImg' />\r\n                You are logged in as {user.tag}\r\n                <button onClick={authentication.logout}>Logout</button>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='osirisAuthentication'>\r\n                <button onClick={authentication.login}>Login</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {API_URL} from '../app_config';\r\n\r\nexport default function EventList(props) {\r\n    const [events, setEvents] = useState([]);\r\n    useEffect(() => {\r\n        (async () => {\r\n            const eventsFetch = await fetch(`${API_URL}/api/events`);\r\n            const events = await eventsFetch.json();\r\n            setEvents(events);\r\n        })();\r\n    }, []);\r\n    const eventElements = events.map(e => (\r\n        <div className='osirisEvent' key={e.event_id}>\r\n            <Link to={`/e/${e.event_id}`}>{e.name}</Link>\r\n        </div>\r\n    ));\r\n    return (\r\n        <div className='osirisEventSelect'>\r\n            {eventElements}\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { API_URL } from '../app_config';\r\n\r\nexport default function LayoutList() {\r\n    const { eventId } = useParams();\r\n    const [layouts, setLayouts] = useState([]);\r\n    useEffect(() => {\r\n        (async () => {\r\n            if(eventId) {\r\n                const eventFetch = await fetch(`${API_URL}/api/events/${eventId}`);\r\n                const event = await eventFetch.json();\r\n                setLayouts(event.layouts);\r\n            }\r\n        })();\r\n    }, [eventId]);\r\n    const layoutElements = layouts.map(l => (\r\n        <div className='osirisLayout' key={l.layout_id}>\r\n            <Link to={`/e/${eventId}/l/${l.layout_id}`}>{l.name}</Link>\r\n        </div>\r\n    ));\r\n    return (\r\n        <div className='osirisLayoutSelect'>\r\n            {layoutElements}\r\n        </div>\r\n    )\r\n}","import { createContext, useContext } from \"react\";\r\nimport { useAuthentication } from \"./AuthenticationContext\";\r\n\r\nconst UserContext = createContext();\r\n\r\nfunction UserProvider(props) {\r\n    return (\r\n        <UserContext.Provider value={useAuthentication().user} {...props} />\r\n    )\r\n};\r\n\r\nconst useUser = () => useContext(UserContext);\r\n\r\nexport {UserProvider, useUser};","import MiniSignal from 'mini-signals';\r\n\r\nexport default new MiniSignal();","import { min as d3min, max as d3max } from 'd3-array';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { API_URL } from '../app_config';\r\nimport { useUser } from '../contexts/UserContext';\r\nimport refreshLayoutSignal from '../signals/refreshLayout';\r\n\r\nconst SEAT_RADIUS = 10;\r\n\r\nexport default function LayoutView() {\r\n    const { eventId, layoutId } = useParams();\r\n    const history = useHistory();\r\n    const [seats, setSeats] = useState([]);\r\n    const [selectedSeat, setSelectedSeat] = useState(null);\r\n    const { width, height, ref } = useResizeDetector();\r\n    const user = useUser();\r\n\r\n    const refreshLayout = useCallback(\r\n        async () => {\r\n            const eventSeatsRequest = await fetch(`${API_URL}/api/events/${eventId}/layouts/${layoutId}`);\r\n            const eventSeats = await eventSeatsRequest.json();\r\n            setSeats(eventSeats);\r\n        },\r\n        [eventId, layoutId]\r\n    )\r\n\r\n    useEffect(() => {\r\n        refreshLayout();\r\n    }, [eventId, layoutId, refreshLayout]);\r\n\r\n    useEffect(() => {\r\n        const signalBinding = refreshLayoutSignal.add(refreshLayout);\r\n\r\n        return () => {\r\n            refreshLayoutSignal.detach(signalBinding);\r\n        }\r\n    });\r\n\r\n    function onSeatClick(seatId) {\r\n        history.push(`/e/${eventId}/l/${layoutId}/s/${seatId}`);\r\n        setSelectedSeat(seatId);\r\n    }\r\n\r\n    const margin = SEAT_RADIUS * 2;\r\n    const xMin = d3min(seats, x => x.x_pos);\r\n    const xMax = d3max(seats, x => x.x_pos);\r\n    const yMin = d3min(seats, x => x.y_pos);\r\n    const yMax = d3max(seats, x => x.y_pos);\r\n\r\n    const xScale = scaleLinear()\r\n        .domain([xMin, xMax])\r\n        .range([margin, width - margin]);\r\n\r\n    const yScale = scaleLinear()\r\n        .domain([yMin, yMax])\r\n        .range([margin, height - margin]);\r\n\r\n    const seatCircles = seats.map(s => (\r\n        <circle cx={xScale(s.x_pos)}\r\n            cy={yScale(s.y_pos)}\r\n            r={SEAT_RADIUS}\r\n            fill=\"black\"\r\n            className={(s.user_id ? ((user && s.user_id === user.user_id) ? 'mine' : 'picked') : 'unpicked') + (s.seat_id === selectedSeat ? ' selected' : '')}\r\n            onClick={() => onSeatClick(s.seat_id)}\r\n            key={s.seat_id} />\r\n    ));\r\n\r\n    return (\r\n        <div className='osirisLayoutView' ref={ref}>\r\n            <svg>\r\n                {seatCircles}\r\n            </svg>\r\n        </div>\r\n    )\r\n}","import { API_URL } from \"../app_config\";\r\n\r\nexport default class SeatService {\r\n    constructor({jwt} = {jwt: undefined}) {\r\n        this.jwt = jwt;\r\n    }\r\n\r\n    async getSeat(eventId, seatId) {\r\n        const seatRequest = await fetch(`${API_URL}/api/events/${eventId}/seat/${seatId}`);\r\n        const seat = await seatRequest.json();\r\n        if (seat.user_id) {\r\n            const userRequest = await fetch(`${API_URL}/api/users/${seat.user_id}`);\r\n            const user = await userRequest.json();\r\n            seat.user = user;\r\n        }\r\n        return seat;\r\n    }\r\n\r\n    async reserveSeat(eventId, seatId) {\r\n        this._checkAuthentication();\r\n        const seatReservationRequest = await fetch(`${API_URL}/api/events/${eventId}/seat/${seatId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': `Bearer ${this.jwt}`,\r\n            },\r\n        });\r\n        const seatReservation = await seatReservationRequest.json();\r\n        console.log(seatReservation);\r\n        if(seatReservation.status === 'err') {\r\n            switch (seatReservation.err) {\r\n                case 'user_has_existing_reservation':\r\n                    alert('You already hold a reservation for this event. You must clear that reservation prior to reserving a new seat.');\r\n                    break;\r\n                default:\r\n                    alert('An error occurred while setting your reservation.');\r\n                    break;\r\n            }\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    async releaseSeat(eventId, seatId) {\r\n        this._checkAuthentication();\r\n        const seatReleaseRequest = await fetch(`${API_URL}/api/events/${eventId}/seat/${seatId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${this.jwt}`,\r\n            },\r\n        });\r\n        return seatReleaseRequest.ok;\r\n    }\r\n\r\n    _checkAuthentication() {\r\n        if(!this.jwt) {\r\n            throw new Error('This method required authentication.');\r\n        }\r\n    }\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport refreshLayoutSignal from '../signals/refreshLayout';\r\nimport SeatService from '../services/SeatService';\r\nimport { useUser } from '../contexts/UserContext';\r\nimport { useAuthentication } from '../contexts/AuthenticationContext';\r\n\r\nexport default function SeatView() {\r\n    const { eventId, seatId } = useParams();\r\n    const [seat, setSeat] = useState({ tag: 'Unknown', user: undefined });\r\n    const user = useUser();\r\n\r\n    const refreshSeat = useCallback(\r\n        async () => {\r\n            var seatService = new SeatService({});\r\n            var seat = await seatService.getSeat(eventId, seatId);\r\n            setSeat(seat);\r\n        },\r\n        [eventId, seatId]\r\n    );\r\n\r\n    useEffect(() => {\r\n        refreshSeat();\r\n    }, [eventId, seatId, refreshSeat]);\r\n\r\n    let detailComponent;\r\n    if (seat.user) { // seat is picked\r\n        if (user && seat.user.user_id === user.user_id) { // seat is picked by us\r\n            detailComponent = <MySeat seat={seat} refreshSeat={refreshSeat} />;\r\n        } else { // seat is picked by someone else\r\n            detailComponent = <ReservedSeat seat={seat} />;\r\n        }\r\n    } else {\r\n        detailComponent = <ReservableSeat seat={seat} refreshSeat={refreshSeat} />;\r\n    }\r\n\r\n    return (\r\n        <div className='osirisSeatView'>\r\n            <h1>Seat {seat.tag}</h1>\r\n            {detailComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ReservableSeat({ seat, refreshSeat }) {\r\n    const { seat_id: seatId } = seat;\r\n    const { eventId } = useParams();\r\n    const authentication = useAuthentication();\r\n\r\n    const canReserve = authentication.jwt && authentication.user;\r\n\r\n    async function reserveSeat() {\r\n        var seatService = new SeatService(authentication);\r\n        var reserveRequest = await seatService.reserveSeat(eventId, seatId);\r\n        if (reserveRequest) {\r\n            refreshSeat();\r\n            refreshLayoutSignal.dispatch();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>This seat is available. It could be yours!</p>\r\n            <button onClick={reserveSeat} disabled={!canReserve}>Reserve</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MySeat({ seat, refreshSeat }) {\r\n    const { seat_id: seatId } = seat;\r\n    const { eventId } = useParams();\r\n    const authentication = useAuthentication();\r\n\r\n    async function releaseSeat() {\r\n        var seatService = new SeatService(authentication);\r\n        var releaseRequest = await seatService.releaseSeat(eventId, seatId);\r\n        if (releaseRequest) {\r\n            refreshSeat();\r\n            refreshLayoutSignal.dispatch();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img src={seat.user.profile_url} alt={seat.user.tag} className='osirisProfileImg' />\r\n            <p>This is your seat!</p>\r\n            <button onClick={releaseSeat}>Release</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ReservedSeat({ seat }) {\r\n    return (\r\n        <div>\r\n            <img src={seat.user.profile_url} alt={seat.user.tag} className='osirisProfileImg' />\r\n            <p>This seat has been picked by {seat.user.tag}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Authenticator from './Authenticator';\r\nimport EventList from './components/EventList';\r\nimport LayoutList from './components/LayoutList';\r\nimport LayoutView from './components/LayoutView';\r\nimport SeatView from './components/SeatView';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div className='root'>\r\n        <div className='osirisBar'>\r\n          <h1>SGS Seat Picker</h1>\r\n          <Authenticator />\r\n        </div>\r\n        <div className='osirisApp'>\r\n          <Route path='/' component={EventList} />\r\n          <Route path='/e/:eventId' component={LayoutList} />\r\n          <Route path='/e/:eventId/l/:layoutId' component={LayoutView} />\r\n          <Route path='/e/:eventId/l/:layoutId/s/:seatId' component={SeatView} />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","import { AuthenticationProvider } from \"./contexts/AuthenticationContext\";\r\nimport { UserProvider } from \"./contexts/UserContext\";\r\n\r\nexport default function ApplicationProviders({ children }) {\r\n    return (\r\n        <AuthenticationProvider>\r\n            <UserProvider>\r\n                {children}\r\n            </UserProvider>\r\n        </AuthenticationProvider>\r\n    );\r\n};","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ApplicationProviders from './ApplicationProviders';\r\nimport { unregister } from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n    <ApplicationProviders>\r\n        <App />\r\n    </ApplicationProviders>, \r\n    document.getElementById('root')\r\n);\r\n//registerServiceWorker();\r\nunregister(); // service worker can fuck off for now\r\n"],"sourceRoot":""}
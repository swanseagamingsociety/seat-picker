{"version":3,"sources":["app_config.js","util/parseUrl.js","util/popupUtils.js","Authenticator.js","presentation/EventList.jsx","containers/EventList.jsx","presentation/LayoutList.jsx","containers/LayoutList.jsx","signals/refreshLayout.js","presentation/LayoutView.jsx","containers/LayoutView.jsx","presentation/SeatView.jsx","containers/SeatView.jsx","App.js","registerServiceWorker.js","index.js"],"names":["API_URL","getSearchQs","location","qs","search","replace","querystring","parse","getAnchorQs","anchorQs","arr","anchor","split","length","getAnchorSearch","getAllParams","extend","listenForAuthentication","popup","resolve","reject","console","log","Promise","res","rej","creds","err","jwt","close","closed","setTimeout","Authenticator","props","state","user","onLoginClick","bind","onLogoutClick","refreshUser","a","loginPopup","window","open","this","login","logout","userRequest","Request","headers","Authorization","fetch","userFetch","json","setState","newProps","className","src","profile_url","alt","tag","onClick","Component","EventList","eventElements","events","map","event","to","event_id","name","EventListContainer","fetchEvents","eventsFetch","LayoutList","layoutElements","layouts","layout","eventId","layout_id","LayoutListContainer","eventFetch","match","params","refreshLayouts","prevProps","MiniSignal","LayoutView","SEAT_RADIUS","width","height","onResize","seats","margin","seatCircles","xMin","d3min","x","x_pos","xMax","d3max","yMin","y_pos","yMax","xScale","scaleLinear","domain","range","yScale","seat","cx","cy","r","fill","user_id","onSeatClick","seat_id","handleWidth","handleHeight","LayoutViewContainer","getSeats","refreshLayout","refreshLayoutSignal","add","layoutId","oldProps","eventSeatsRequest","eventSeats","seatId","history","push","withRouter","SeatView","seatComponent","auth","SelfPickedSeat","onReleaseClick","releaseSeat","PickedSeat","UnpickedSeat","onReserveClick","reserveSeat","canReserve","disabled","SeatViewContainer","getSeat","refreshSeat","seatRequest","method","authorization","seatReservationRequest","seatReservation","alert","dispatch","ok","App","localStorage","getItem","fetchUser","setItem","removeItem","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0cb82313.chunk.js","sourcesContent":["export const API_URL = 'https://sgs-seatpicker.herokuapp.com';\r\n","import querystring from \"querystring\";\r\nimport extend from \"extend\";\r\n\r\nexport function normalizeTokenKeys (params) {\r\n  // normalize keys\r\n  if (params.token) {\r\n    params[\"access-token\"] = params.token;\r\n    delete params.token;\r\n  }\r\n  if (params.auth_token) {\r\n    params[\"access-token\"] = params.auth_token;\r\n    delete params.auth_token;\r\n  }\r\n  if (params.client_id) {\r\n    params.client = params.client_id;\r\n    delete params.client_id;\r\n  }\r\n  if (params.config) {\r\n    params.endpointKey = params.config;\r\n    delete params.config;\r\n  }\r\n\r\n  return params;\r\n};\r\n\r\n\r\nconst getAnchorSearch = function(location) {\r\n  var rawAnchor = location.anchor || \"\",\r\n    arr       = rawAnchor.split(\"?\");\r\n  return (arr.length > 1) ? arr[1] : null;\r\n};\r\n\r\n\r\nconst getSearchQs = function(location) {\r\n  var rawQs = location.search || \"\",\r\n    qs    = rawQs.replace(\"?\", \"\"),\r\n    qsObj = (qs) ? querystring.parse(qs) : {};\r\n\r\n  return qsObj;\r\n};\r\n\r\n\r\nconst getAnchorQs = function(location) {\r\n  var anchorQs    = getAnchorSearch(location),\r\n    anchorQsObj = (anchorQs) ? querystring.parse(anchorQs) : {};\r\n\r\n  return anchorQsObj;\r\n};\r\n\r\nconst stripKeys = function(obj, keys) {\r\n  for (var q in keys) {\r\n    delete obj[keys[q]];\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\nexport function getAllParams (location) {\r\n  return extend({}, getAnchorQs(location), getSearchQs(location));\r\n};\r\n\r\n\r\nconst buildCredentials = function(location, keys) {\r\n  var params = getAllParams(location);\r\n  var authHeaders = {};\r\n\r\n  for (var key of keys) {\r\n    authHeaders[key] = params[key];\r\n  }\r\n\r\n  return normalizeTokenKeys(authHeaders);\r\n};\r\n\r\n\r\n// this method is tricky. we want to reconstruct the current URL with the\r\n// following conditions:\r\n// 1. search contains none of the supplied keys\r\n// 2. anchor search (i.e. `#/?key=val`) contains none of the supplied keys\r\n// 3. all of the keys NOT supplied are presevered in their original form\r\n// 4. url protocol, host, and path are preserved\r\nconst getLocationWithoutParams = function(currentLocation, keys) {\r\n  // strip all values from both actual and anchor search params\r\n  var newSearch   = querystring.stringify(stripKeys(getSearchQs(currentLocation), keys)),\r\n    newAnchorQs = querystring.stringify(stripKeys(getAnchorQs(currentLocation), keys)),\r\n    newAnchor   = (currentLocation.hash || \"\").split(\"?\")[0];\r\n\r\n  if (newSearch) {\r\n    newSearch = \"?\" + newSearch;\r\n  }\r\n\r\n  if (newAnchorQs) {\r\n    newAnchor += \"?\" + newAnchorQs;\r\n  }\r\n\r\n  if (newAnchor && !newAnchor.match(/^#/)) {\r\n    newAnchor = \"#/\" + newAnchor;\r\n  }\r\n\r\n  // reconstruct location with stripped auth keys\r\n  var newLocation = currentLocation.pathname + newSearch + newAnchor;\r\n\r\n  return newLocation;\r\n};\r\n\r\n\r\nexport default function getRedirectInfo(currentLocation) {\r\n  if (!currentLocation) {\r\n    return {};\r\n  } else {\r\n    let authKeys = [\r\n      \"access-token\",\r\n      \"token\",\r\n      \"auth_token\",\r\n      \"config\",\r\n      \"client\",\r\n      \"client_id\",\r\n      \"expiry\",\r\n      \"uid\",\r\n      \"reset_password\",\r\n      \"account_confirmation_success\"\r\n    ];\r\n\r\n    var authRedirectHeaders = buildCredentials(currentLocation, authKeys);\r\n    var authRedirectPath = getLocationWithoutParams(currentLocation, authKeys);\r\n\r\n    if (authRedirectPath !== currentLocation) {\r\n      return {authRedirectHeaders, authRedirectPath};\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n","import { API_URL } from '../app_config';\r\nimport { getAllParams } from './parseUrl';\r\n\r\nfunction openAuthenticationPopup() {\r\n  return window.open(`${API_URL}/api/auth/login`, 'Osiris2 Authentication', 'scrollbars=no,toolbar=no,location=no,titlebar=no,directories=no,status=no,menubar=no');\r\n}\r\n\r\nfunction listenForAuthentication(popup, resolve, reject) {\r\n  if(!resolve) {\r\n    console.log('Setting up authentication');\r\n    return new Promise((res, rej) => {\r\n      listenForAuthentication(popup, res, rej);\r\n    });\r\n  } else {\r\n    let creds;\r\n    try {\r\n      creds = getAllParams(popup.location);\r\n    } catch (err) { }\r\n    if(creds && creds.jwt) {\r\n      console.log('We did it reddit!');\r\n      popup.close();\r\n      resolve(creds.jwt);\r\n    } else if (popup.closed) {\r\n      reject({ err: 'Authentication cancelled.' });\r\n    } else {\r\n      setTimeout(() => {\r\n        listenForAuthentication(popup, resolve, reject);\r\n      }, 0);\r\n    }\r\n  }\r\n}\r\n\r\nexport { openAuthenticationPopup, listenForAuthentication }\r\n","import React, { Component } from 'react';\r\n\r\nimport { openAuthenticationPopup, listenForAuthentication } from './util/popupUtils';\r\nimport { API_URL } from './app_config';\r\n\r\nclass Authenticator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: null,\r\n    };\r\n\r\n    this.onLoginClick = this.onLoginClick.bind(this);\r\n    this.onLogoutClick = this.onLogoutClick.bind(this);\r\n    this.refreshUser = this.refreshUser.bind(this);\r\n  }\r\n  \r\n  async onLoginClick() {\r\n    const loginPopup = openAuthenticationPopup();\r\n    const jwt = await listenForAuthentication(loginPopup);\r\n    this.props.login(jwt);\r\n  }\r\n\r\n  onLogoutClick() {\r\n    this.props.logout();\r\n  }\r\n\r\n  async refreshUser(jwt) {\r\n    if(jwt) { // user is logging in\r\n      try {\r\n        const userRequest = new Request(`${API_URL}/api/users/@me`, {\r\n          headers: {\r\n            Authorization: `Bearer ${jwt}`,\r\n          },\r\n        });\r\n        const userFetch = await fetch(userRequest);\r\n        const user = await userFetch.json();\r\n        this.setState({ user });\r\n      } catch (e) {\r\n        // there's an issue with the JWT, nuke it and start again\r\n        this.setState({ user: null });\r\n        this.props.logout();\r\n      }\r\n    } else { // user is logging out\r\n      this.setState({ user: null });\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshUser(this.props.jwt);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if(newProps.jwt !== this.props.jwt) {\r\n      this.refreshUser(newProps.jwt);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(this.state.user) { // loggedIn\r\n      const { user } = this.state;\r\n      return (\r\n        <div className='osirisAuthentication'>\r\n          <img src={user.profile_url} alt={user.tag} className='osirisLoggedInUserImg' />\r\n          You are logged in as {user.tag}\r\n          <button onClick={this.onLogoutClick}>Logout</button>\r\n        </div>\r\n      );\r\n    } else { // !loggedIn\r\n      return (\r\n        <div className='osirisAuthentication'>\r\n          <button onClick={this.onLoginClick}>Login</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Authenticator;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const eventElements = this.props.events.map(event => (\r\n      <div className='osirisEvent' key={event.event_id}>\r\n        <Link to={`/e/${event.event_id}`}>{event.name}</Link>\r\n      </div>\r\n    ));\r\n    return (\r\n      <div className='osirisEventSelect'>\r\n        {eventElements}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\nimport EventListPresentation from '../presentation/EventList';\r\n\r\nimport { API_URL } from '../app_config';\r\n\r\nclass EventListContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      events: [],\r\n    };\r\n\r\n    this.fetchEvents = this.fetchEvents.bind(this);\r\n  }\r\n\r\n  async fetchEvents() {\r\n    const eventsFetch = await fetch(`${API_URL}/api/events`);\r\n    const events = await eventsFetch.json();\r\n    this.setState({ events });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.fetchEvents();\r\n  }\r\n\r\n  render() {\r\n    return <EventListPresentation events={this.state.events} />;\r\n  }\r\n}\r\n\r\nexport default EventListContainer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass LayoutList extends Component {\r\n  render() {\r\n    const layoutElements = this.props.layouts.map(layout => (\r\n      <div className='osirisLayout' key={layout.layout_id}>\r\n        <Link to={`/e/${this.props.eventId}/l/${layout.layout_id}`}>{layout.name}</Link>\r\n      </div>\r\n    ));\r\n    return (\r\n      <div className='osirisLayoutSelect'>\r\n        {layoutElements}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LayoutList;","import React, { Component } from 'react';\r\nimport { API_URL } from '../app_config';\r\n\r\nimport LayoutList from '../presentation/LayoutList';\r\n\r\nclass LayoutListContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      layouts: [],\r\n      event: null,\r\n    };\r\n  }\r\n\r\n  async refreshLayouts(eventId) {\r\n    const eventFetch = await fetch(`${API_URL}/api/events/${eventId}`);\r\n    const event = await eventFetch.json();\r\n    this.setState({\r\n      layouts: event.layouts,\r\n      event: eventId,\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const eventId = this.props.match.params.eventId;\r\n    await this.refreshLayouts(eventId);\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    if(this.props.match.params.eventId !== prevProps.match.params.eventId) {\r\n      await this.refreshLayouts(this.props.match.params.eventId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <LayoutList layouts={this.state.layouts} eventId={this.state.event} />;\r\n  }\r\n\r\n}\r\n\r\nexport default LayoutListContainer;","import MiniSignal from 'mini-signals';\r\n\r\nexport default new MiniSignal();","import React, { Component } from 'react';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\n\r\nimport { min as d3min, max as d3max } from 'd3-array';\r\nimport { scaleLinear } from 'd3-scale';\r\n\r\nclass LayoutView extends Component {\r\n  SEAT_RADIUS = 10;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 1,\r\n      height: 1,\r\n    };\r\n\r\n    this.onResize = this.onResize.bind(this);\r\n  }\r\n\r\n  onResize(width, height) {\r\n    this.setState({ width, height });\r\n  }\r\n\r\n  render() {\r\n    const { seats } = this.props;\r\n    const { width, height } = this.state;\r\n\r\n    const margin = this.SEAT_RADIUS * 2;\r\n\r\n    let seatCircles = [];\r\n\r\n    if(seats) {\r\n      const xMin = d3min(seats, x => x.x_pos);\r\n      const xMax = d3max(seats, x => x.x_pos);\r\n      const yMin = d3min(seats, x => x.y_pos);\r\n      const yMax = d3max(seats, x => x.y_pos);\r\n  \r\n      const xScale = scaleLinear()\r\n        .domain([xMin, xMax])\r\n        .range([margin, width - margin]);\r\n      \r\n      const yScale = scaleLinear()\r\n        .domain([yMin, yMax])\r\n        .range([margin, height - margin]);\r\n\r\n      console.log({xMin, xMax, yMin, yMax });\r\n  \r\n      seatCircles = seats.map(seat => (\r\n        <circle cx={xScale(seat.x_pos)}\r\n          cy={yScale(seat.y_pos)}\r\n          r={this.SEAT_RADIUS}\r\n          fill=\"black\"\r\n          className={seat.user_id ? 'picked' : 'unpicked'}\r\n          onClick={() => this.props.onSeatClick(seat.seat_id)}\r\n          key={seat.seat_id} />\r\n      ));\r\n    }\r\n    \r\n    return (\r\n      <div className='osirisLayoutView'>\r\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} />\r\n        <svg>\r\n          {seatCircles}\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LayoutView;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport refreshLayoutSignal from '../signals/refreshLayout';\r\n\r\nimport LayoutView from '../presentation/LayoutView';\r\nimport { API_URL } from '../app_config';\r\n\r\nclass LayoutViewContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seats: [],\r\n    };\r\n    this.getSeats = this.getSeats.bind(this);\r\n    this.onSeatClick = this.onSeatClick.bind(this);\r\n    this.refreshLayout = this.refreshLayout.bind(this);\r\n\r\n    refreshLayoutSignal.add(this.refreshLayout);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { eventId, layoutId } = this.props.match.params;\r\n    this.getSeats(eventId, layoutId);\r\n  }\r\n\r\n  componentDidUpdate(oldProps) {\r\n    if (\r\n      oldProps.match.params.eventId !== this.props.match.params.eventId ||\r\n      oldProps.match.params.layoutId !== this.props.match.params.layoutId\r\n    ) {\r\n      const { eventId, layoutId } = this.props.match.params;\r\n      if (eventId && layoutId) {\r\n        this.getSeats(eventId, layoutId);\r\n      } else {\r\n        this.setState({\r\n          seats: [],\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  refreshLayout() {\r\n    console.log('LayoutViewContainer#refreshLayout fired');\r\n    const { eventId, layoutId } = this.props.match.params;\r\n    this.getSeats(eventId, layoutId);\r\n  }\r\n\r\n  async getSeats(eventId, layoutId) {\r\n    const eventSeatsRequest = await fetch(`${API_URL}/api/events/${eventId}/layouts/${layoutId}`);\r\n    const eventSeats = await eventSeatsRequest.json() || [];\r\n    this.setState({ seats: eventSeats });\r\n  }\r\n\r\n  onSeatClick(seatId) {\r\n    const { eventId, layoutId } = this.props.match.params;\r\n    this.props.history.push(`/e/${eventId}/l/${layoutId}/s/${seatId}`);\r\n  }\r\n\r\n  render() {\r\n    return <LayoutView seats={this.state.seats} onSeatClick={this.onSeatClick} />;\r\n  }\r\n}\r\n\r\nexport default withRouter(LayoutViewContainer);","import React, { Component } from 'react';\r\n\r\nclass SeatView extends Component {\r\n  render() {\r\n    const { auth, seat, user } = this.props;\r\n    let seatComponent;\r\n    if(user) { // seat is picked\r\n      if(auth.user && seat.user_id == auth.user.user_id) { // seat is picked by self\r\n        seatComponent = <SelfPickedSeat user={user} onReleaseClick={() => this.props.releaseSeat(seat)} />\r\n      } else { // seat is picked by other user\r\n        seatComponent = <PickedSeat user={user} />;\r\n      }\r\n    } else { // seat is unpicked\r\n      seatComponent = <UnpickedSeat onReserveClick={() => this.props.reserveSeat(seat)} canReserve={auth.user ? true : false} />;\r\n    }\r\n\r\n    return (\r\n      <div className='osirisSeatView'>\r\n        <h1>Seat {seat.tag}</h1>\r\n        {seatComponent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction UnpickedSeat(props) {\r\n  return (\r\n    <div>\r\n      <p>This seat is available. It could be yours!</p>\r\n      <button onClick={props.onReserveClick} disabled={!props.canReserve}>Reserve</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PickedSeat(props) {\r\n  return (\r\n    <div>\r\n      <img src={props.user.profile_url} alt={props.user.tag} className='osirisProfileImg' />\r\n      <p>This seat has been picked by {props.user.tag}</p>\r\n      <button disabled>Request this seat</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SelfPickedSeat(props) {\r\n  return (\r\n    <div>\r\n      <img src={props.user.profile_url} alt={props.user.tag} className='osirisProfileImg' />\r\n      <p>This is your seat!</p>\r\n      <button onClick={props.onReleaseClick}>Release</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SeatView;","import React, { Component } from 'react';\r\n\r\nimport refreshLayoutSignal from '../signals/refreshLayout';\r\nimport SeatView from '../presentation/SeatView';\r\n\r\nimport { API_URL } from '../app_config';\r\n\r\nclass SeatViewContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      seat: { tag: 'Unknown' },\r\n      user: null\r\n    };\r\n\r\n    this.getSeat = this.getSeat.bind(this);\r\n    this.reserveSeat = this.reserveSeat.bind(this);\r\n    this.releaseSeat = this.releaseSeat.bind(this);\r\n    this.refreshSeat = this.refreshSeat.bind(this);\r\n  }\r\n\r\n  async getSeat(eventId, seatId) {\r\n    const seatRequest = await fetch(`${API_URL}/api/events/${eventId}/seat/${seatId}`);\r\n    const seat = await seatRequest.json();\r\n    this.setState({ seat });\r\n\r\n    if(seat.user_id) {\r\n      const userRequest = await fetch(`${API_URL}/api/users/${seat.user_id}`);\r\n      const user = await userRequest.json();\r\n      this.setState({ user });\r\n    } else {\r\n      this.setState({ user: null });\r\n    }\r\n  }\r\n\r\n  async reserveSeat(seat) {\r\n    const { eventId } = this.props.match.params;\r\n    const seatId = seat.seat_id;\r\n    if(!eventId) { return; }\r\n\r\n    const seatReservationRequest = await fetch(`${API_URL}/api/events/${eventId}/seat/${seatId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: `Bearer ${this.props.jwt}`,\r\n      },\r\n    });\r\n    const seatReservation = await seatReservationRequest.json();\r\n    if(seatReservation.err) {\r\n      switch(seatReservation.err) {\r\n      case 'user_has_existing_reservation':\r\n        alert('You already hold a reservation for this event! You must clear that reservation prior to reserving a new seat.');\r\n        break;\r\n      default:\r\n        alert('An error occurred while setting your reservation. Please contact support if this error persists.');\r\n        break;\r\n      }\r\n    } else {\r\n      refreshLayoutSignal.dispatch();\r\n      this.refreshSeat(); \r\n    }\r\n  }\r\n\r\n  async releaseSeat(seat) {\r\n    const { eventId } = this.props.match.params;\r\n    const seatId = seat.seat_id;\r\n    if(!eventId) { return; }\r\n\r\n    const seatReleaseRequest = await fetch(`${API_URL}/api/events/${eventId}/seat/${seatId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: `Bearer ${this.props.jwt}`,\r\n      },\r\n    });\r\n    if(seatReleaseRequest.ok) {\r\n      refreshLayoutSignal.dispatch();\r\n      this.refreshSeat();\r\n    }\r\n  }\r\n  \r\n  refreshSeat() {\r\n    const { seatId, eventId } = this.props.match.params;\r\n    this.getSeat(eventId, seatId);\r\n  }\r\n\r\n  componentDidUpdate(oldProps) {\r\n    if(\r\n      oldProps.match.params.seatId !== this.props.match.params.seatId ||\r\n      oldProps.match.params.eventId !== this.props.match.params.eventId\r\n    ) {\r\n      this.refreshSeat();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshSeat();\r\n  }\r\n\r\n  render() {\r\n    const { seat, user } = this.state;\r\n    const auth = { };\r\n    if(this.props.user) {\r\n      auth.user = this.props.user;\r\n    }\r\n\r\n    console.log({ seat, user, auth });\r\n    return <SeatView seat={seat} user={user} auth={auth} releaseSeat={this.releaseSeat} reserveSeat={this.reserveSeat} />;\r\n  }\r\n}\r\n\r\nexport default SeatViewContainer;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Authenticator from './Authenticator';\r\nimport EventList from './containers/EventList';\r\nimport LayoutList from './containers/LayoutList';\r\nimport LayoutView from './containers/LayoutView';\r\nimport SeatView from './containers/SeatView';\r\n\r\nimport { API_URL } from './app_config';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jwt: window.localStorage.getItem('Osiris2_JWT'),\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.fetchUser = this.fetchUser.bind(this);\r\n  }\r\n\r\n  async login(jwt) {\r\n    this.setState({jwt});\r\n    window.localStorage.setItem('Osiris2_JWT', jwt);\r\n    this.fetchUser(jwt);\r\n  }\r\n\r\n  async fetchUser(jwt) {\r\n    const userRequest = await fetch(`${API_URL}/api/users/@me`,\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${jwt}`,\r\n        }\r\n      });\r\n    const user = await userRequest.json();\r\n    this.setState({ user });\r\n  }\r\n\r\n  logout() {\r\n    this.setState({ jwt: null, user: null });\r\n    window.localStorage.removeItem('Osiris2_JWT');\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.state.jwt) { // load the user info\r\n      this.fetchUser(this.state.jwt);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className='root'>\r\n          <div className='osirisBar'>\r\n            <h1>SGS Seat Picker</h1>\r\n            <Authenticator login={this.login} logout={this.logout} jwt={this.state.jwt} />\r\n          </div>\r\n          <div className='osirisApp'>\r\n            <Route path='/' component={EventList} />\r\n            <Route path='/e/:eventId' component={LayoutList} />\r\n            <Route path='/e/:eventId/l/:layoutId' component={LayoutView} />\r\n            <Route path='/e/:eventId/l/:layoutId/s/:seatId' component={(props) => <SeatView {...props} jwt={this.state.jwt} user={this.state.user} />} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { unregister } from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n//registerServiceWorker();\r\nunregister(); // service worker can fuck off for now\r\n"],"sourceRoot":""}